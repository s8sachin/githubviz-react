// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Header should click create github viz link 1`] = `
<div>
  <Header />
  <Grid
    bsClass="container"
    componentClass="div"
    fluid={false}
  >
    <Jumbotron
      bsClass="jumbotron"
      componentClass="div"
    >
      <h1>
        Hello, world!
      </h1>
      <p>
        This is a simple hero unit, a simple jumbotron-style component for calling extra attention to featured content or information.
      </p>
      <p>
        <Button
          active={false}
          block={false}
          bsClass="btn"
          bsStyle="primary"
          disabled={false}
          onClick={[Function]}
        >
          Login
        </Button>
      </p>
    </Jumbotron>
  </Grid>
</div>
`;

exports[`Header should click create linegraph link 1`] = `
<div>
  <Header />
  <Grid
    bsClass="container"
    componentClass="div"
    fluid={false}
  >
    <Row
      bsClass="row"
      className="show-grid"
      componentClass="div"
    >
      <Col
        bsClass="col"
        componentClass="div"
        md={6}
        xs={12}
      >
        <div>
          <XYPlot
            className=""
            color="orange"
            height={300}
            stroke="black"
            width={500}
            xType="ordinal"
          >
            <VerticalGridLines
              attr="x"
              direction="vertical"
            />
            <HorizontalGridLines
              attr="y"
              direction="horizontal"
            />
            <XAxis
              attr="x"
              attrAxis="y"
              orientation="bottom"
            />
            <YAxis
              attr="y"
              attrAxis="x"
              orientation="left"
            />
            <VerticalBarSeries
              className=""
              data={
                Array [
                  Object {
                    "x": 0,
                    "y": 8,
                  },
                  Object {
                    "x": 1,
                    "y": 5,
                  },
                  Object {
                    "x": 2,
                    "y": 4,
                  },
                  Object {
                    "x": 3,
                    "y": 9,
                  },
                  Object {
                    "x": 4,
                    "y": 1,
                  },
                  Object {
                    "x": 5,
                    "y": 7,
                  },
                  Object {
                    "x": 6,
                    "y": 6,
                  },
                  Object {
                    "x": 7,
                    "y": 3,
                  },
                  Object {
                    "x": 8,
                    "y": 2,
                  },
                  Object {
                    "x": 9,
                    "y": 0,
                  },
                ]
              }
              onSeriesMouseOut={[Function]}
              onValueMouseOver={[Function]}
              stack={false}
              style={Object {}}
            />
          </XYPlot>
          <h3
            className="head-custom"
          >
            BarGragh:
          </h3>
          <p
            className="para-custom"
          >
            Bar series come in two flavors, HorizontalBarSeries and VerticalBarSeries
          </p>
        </div>
      </Col>
      <Col
        bsClass="col"
        componentClass="div"
        md={6}
        xs={12}
      >
        <XYPlot
          className=""
          height={300}
          stroke="orange"
          width={300}
          xType="ordinal"
          yType="ordinal"
        >
          <VerticalGridLines
            attr="x"
            direction="vertical"
          />
          <HorizontalGridLines
            attr="y"
            direction="horizontal"
          />
          <XAxis
            attr="x"
            attrAxis="y"
            orientation="bottom"
          />
          <YAxis
            attr="y"
            attrAxis="x"
            orientation="left"
          />
          <LineMarkSeries
            className=""
            curve={null}
            data={
              Array [
                Object {
                  "x": "Repo",
                  "y": "C1",
                },
                Object {
                  "x": "Repo1",
                  "y": "C2",
                },
                Object {
                  "x": "Repo2",
                  "y": "C3",
                },
                Object {
                  "x": "Repo3",
                  "y": "C4",
                },
                Object {
                  "x": "Repo4",
                  "y": "C5",
                },
                Object {
                  "x": "Repo5",
                  "y": "C6",
                },
              ]
            }
            getNull={[Function]}
            lineStyle={Object {}}
            markStyle={Object {}}
            onSeriesMouseOut={[Function]}
            onValueMouseOver={[Function]}
            opacity={1}
            stack={false}
            strokeStyle="solid"
            style={Object {}}
          />
        </XYPlot>
        <h3
          className="head-custom"
        >
          LineGragh:
        </h3>
        <p
          className="para-custom"
        >
          Line series come in two flavors, HorizontalBarSeries and VerticalBarSeries
        </p>
      </Col>
    </Row>
  </Grid>
</div>
`;

exports[`Header should click create login link 1`] = `
<div>
  <Header />
  <Grid
    bsClass="container"
    componentClass="div"
    fluid={false}
  >
    <Row
      bsClass="row"
      className="show-grid"
      componentClass="div"
    >
      <Col
        bsClass="col"
        componentClass="div"
        md={6}
        xs={12}
      >
        <div>
          <XYPlot
            className=""
            color="orange"
            height={300}
            stroke="black"
            width={500}
            xType="ordinal"
          >
            <VerticalGridLines
              attr="x"
              direction="vertical"
            />
            <HorizontalGridLines
              attr="y"
              direction="horizontal"
            />
            <XAxis
              attr="x"
              attrAxis="y"
              orientation="bottom"
            />
            <YAxis
              attr="y"
              attrAxis="x"
              orientation="left"
            />
            <VerticalBarSeries
              className=""
              data={
                Array [
                  Object {
                    "x": 0,
                    "y": 8,
                  },
                  Object {
                    "x": 1,
                    "y": 5,
                  },
                  Object {
                    "x": 2,
                    "y": 4,
                  },
                  Object {
                    "x": 3,
                    "y": 9,
                  },
                  Object {
                    "x": 4,
                    "y": 1,
                  },
                  Object {
                    "x": 5,
                    "y": 7,
                  },
                  Object {
                    "x": 6,
                    "y": 6,
                  },
                  Object {
                    "x": 7,
                    "y": 3,
                  },
                  Object {
                    "x": 8,
                    "y": 2,
                  },
                  Object {
                    "x": 9,
                    "y": 0,
                  },
                ]
              }
              onSeriesMouseOut={[Function]}
              onValueMouseOver={[Function]}
              stack={false}
              style={Object {}}
            />
          </XYPlot>
          <h3
            className="head-custom"
          >
            BarGragh:
          </h3>
          <p
            className="para-custom"
          >
            Bar series come in two flavors, HorizontalBarSeries and VerticalBarSeries
          </p>
        </div>
      </Col>
      <Col
        bsClass="col"
        componentClass="div"
        md={6}
        xs={12}
      >
        <XYPlot
          className=""
          height={300}
          stroke="orange"
          width={300}
          xType="ordinal"
          yType="ordinal"
        >
          <VerticalGridLines
            attr="x"
            direction="vertical"
          />
          <HorizontalGridLines
            attr="y"
            direction="horizontal"
          />
          <XAxis
            attr="x"
            attrAxis="y"
            orientation="bottom"
          />
          <YAxis
            attr="y"
            attrAxis="x"
            orientation="left"
          />
          <LineMarkSeries
            className=""
            curve={null}
            data={
              Array [
                Object {
                  "x": "Repo",
                  "y": "C1",
                },
                Object {
                  "x": "Repo1",
                  "y": "C2",
                },
                Object {
                  "x": "Repo2",
                  "y": "C3",
                },
                Object {
                  "x": "Repo3",
                  "y": "C4",
                },
                Object {
                  "x": "Repo4",
                  "y": "C5",
                },
                Object {
                  "x": "Repo5",
                  "y": "C6",
                },
              ]
            }
            getNull={[Function]}
            lineStyle={Object {}}
            markStyle={Object {}}
            onSeriesMouseOut={[Function]}
            onValueMouseOver={[Function]}
            opacity={1}
            stack={false}
            strokeStyle="solid"
            style={Object {}}
          />
        </XYPlot>
        <h3
          className="head-custom"
        >
          LineGragh:
        </h3>
        <p
          className="para-custom"
        >
          Line series come in two flavors, HorizontalBarSeries and VerticalBarSeries
        </p>
      </Col>
    </Row>
  </Grid>
</div>
`;

exports[`Header should click create piechart link 1`] = `
<div>
  <Header />
  <Radialcharts />
  <ClockExample />
</div>
`;

exports[`Header should mount Header component 1`] = `
<Uncontrolled(Navbar)
  bsStyle="default"
  collapseOnSelect={true}
  inverse={true}
>
  <NavbarHeader>
    <NavbarBrand>
      <a
        href="#"
        id="gitviz"
        onClick={[Function]}
      >
        Github Viz
      </a>
    </NavbarBrand>
    <NavbarToggle />
  </NavbarHeader>
  <NavbarCollapse>
    <Nav
      bsClass="nav"
      justified={false}
      pullLeft={false}
      pullRight={true}
      stacked={false}
    >
      <NavItem
        active={false}
        disabled={false}
        eventKey={1}
        id="piechart"
        onClick={[Function]}
      >
        Pie chart
      </NavItem>
      <NavItem
        active={false}
        disabled={false}
        eventKey={2}
        id="linegrph"
        onClick={[Function]}
      >
        Line Gragh
      </NavItem>
    </Nav>
  </NavbarCollapse>
</Uncontrolled(Navbar)>
`;
